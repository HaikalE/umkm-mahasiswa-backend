version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: umkm_postgres_prod
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    networks:
      - umkm-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: umkm_redis_prod
    volumes:
      - redis_prod_data:/data
    networks:
      - umkm-network
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}

  api:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: umkm_api_prod
    environment:
      NODE_ENV: production
    env_file:
      - .env.production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - umkm-network
    restart: always
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  nginx:
    image: nginx:alpine
    container_name: umkm_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    networks:
      - umkm-network
    restart: always

volumes:
  postgres_prod_data:
    driver: local
  redis_prod_data:
    driver: local

networks:
  umkm-network:
    driver: bridge